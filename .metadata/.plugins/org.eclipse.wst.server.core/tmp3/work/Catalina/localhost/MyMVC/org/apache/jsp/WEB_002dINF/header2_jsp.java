/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-11-19 22:15:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1603240492000L));
    _jspx_dependants.put("jar:file:/C:/NCS/workspace(jsp)/.metadata/.plugins/org.eclipse.wst.server.core/tmp3/wtpwebapps/MyMVC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/NCS/workspace(jsp)/.metadata/.plugins/org.eclipse.wst.server.core/tmp3/wtpwebapps/MyMVC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/login/login.jsp", Long.valueOf(1604822452000L));
    _jspx_dependants.put("/WEB-INF/myshop/categoryList.jsp", Long.valueOf(1605496558000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");

    String ctxPath = request.getContextPath();
    //    /MyMVC

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<title>:::HOMEPAGE:::</title>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print( ctxPath);
      out.write("/css/style.css\" />\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print( ctxPath);
      out.write("/jquery-ui-1.11.4.custom/jquery-ui.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print( ctxPath);
      out.write("/jquery-ui-1.11.4.custom/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar vhtml = \"\";\r\n");
      out.write("\t\tfor(var i=0; i<15; i++) {\r\n");
      out.write("\t\t\tvhtml += (i+1)+\".내용물<br/>\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t//\t$(\"#sideconent\").html(vhtml);\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"mycontainer\">\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"headerImg\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-3\">1. 로고이미지/네비게이터</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-2\"><a href=\"http://www.samsung.com\"><img src=\"");
      out.print( ctxPath );
      out.write("/images/logo1.png\"/></a></div>\r\n");
      out.write("\t\t\t<div class=\"col-md-2\"><img src=\"");
      out.print( ctxPath );
      out.write("/images/logo2.png\"/></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"headerLink\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-1\">\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( ctxPath );
      out.write("/index.up\">HOME</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"col-md-1\">\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( ctxPath );
      out.write("/member/memberRegister.up\">회원가입</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /WEB-INF/header2.jsp(64,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid == 'admin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(' ');
            out.write("\r\n");
            out.write("\t\t\t\t<div class=\"col-md-1\">\r\n");
            out.write("\t\t\t\t\t<a href=\"");
            out.print( ctxPath );
            out.write("/member/memberList.up\">회원목록</a>\r\n");
            out.write("\t\t\t\t</div>\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"col-md-1\">\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( ctxPath );
      out.write("/shop/mallHome1.up\">쇼핑몰홈1</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"col-md-1\">\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( ctxPath );
      out.write("/shop/mallHome2.up\">쇼핑몰홈2</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"sideinfo\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\" style=\"height: 50px; text-align: left; padding: 20px;\">\r\n");
      out.write("\t\t\t\t2. 로그인/Tree/View\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\ttable#loginTbl , table#snsloginTbl{\r\n");
      out.write("\t\twidth: 95%;\r\n");
      out.write("\t\tborder: solid 1px gray;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t\tmargin-top: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ttable#loginTbl #th {\r\n");
      out.write("\t\tbackground-color: silver;\r\n");
      out.write("\t\tfont-size: 14pt;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\ttable#loginTbl td {\r\n");
      out.write("\t\tborder: solid 1px gray;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// === 로컬스토리지(localStorage)에 저장된 key 가 \"saveid\"인  userid 값을 불러와서 input 태그 userid에 넣어주기 === //\r\n");
      out.write("\t\tvar loginUserid = localStorage.getItem('saveid');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(loginUserid != null) {\r\n");
      out.write("\t\t\t$(\"input#loginUserid\").val(loginUserid);\r\n");
      out.write("\t\t\t$(\"input:checkbox[id=saveid]\").prop(\"checked\", true);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"button#btnSubmit\").click(function(){\r\n");
      out.write("\t\t\tgoLogin(); // 로그인 시도한다.\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input#loginPwd\").keyup(function(event){\r\n");
      out.write("\t\t\tif(event.keyCode == 13) { // 암호입력란에 엔터를 했을 경우 \r\n");
      out.write("\t\t\t\tgoLogin(); // 로그인 시도한다.\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".myclose\").click(function(){\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t   javascript:history.go(0);\r\n");
      out.write("\t       // 현재 페이지를 새로고침을 함으로써 모달창에 입력한 성명과 이메일의 값이 텍스트박스에 남겨있지 않고 삭제하는 효과를 누린다. \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* === 새로고침(다시읽기) 방법 3가지 차이점 ===\r\n");
      out.write("\t\t   >>> 1. 일반적인 다시읽기 <<<\r\n");
      out.write("\t\t   window.location.reload();\r\n");
      out.write("\t\t   ==> 이렇게 하면 컴퓨터의 캐시에서 우선 파일을 찾아본다.\r\n");
      out.write("\t\t            없으면 서버에서 받아온다. \r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t   >>> 2. 강력하고 강제적인 다시읽기 <<<\r\n");
      out.write("\t\t   window.location.reload(true);\r\n");
      out.write("\t\t   ==> true 라는 파라미터를 입력하면, 무조건 서버에서 직접 파일을 가져오게 된다.\r\n");
      out.write("\t\t            캐시는 완전히 무시된다.\r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t   >>> 3. 부드럽고 소극적인 다시읽기 <<<\r\n");
      out.write("\t\t   history.go(0);\r\n");
      out.write("\t\t   ==> 이렇게 하면 캐시에서 현재 페이지의 파일들을 항상 우선적으로 찾는다.\r\n");
      out.write("\t\t*/\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});// end of $(document).ready()--------------------------------------\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t// === 로그인 처리 함수 === //\r\n");
      out.write("\tfunction goLogin() {\r\n");
      out.write("\t//\talert(\"로그인 시도함\");\r\n");
      out.write("\t\r\n");
      out.write("\t    var loginUserid = $(\"input#loginUserid\").val().trim();\r\n");
      out.write("\t    var loginPwd = $(\"input#loginPwd\").val().trim();\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(loginUserid == \"\") {\r\n");
      out.write("\t    \talert(\"아이디를 입력하세요!!\");\r\n");
      out.write("\t    \t$(\"input#loginUserid\").val(\"\");\r\n");
      out.write("\t    \t$(\"input#loginUserid\").focus();\r\n");
      out.write("\t    \treturn;  // goLogin() 함수 종료 \r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t    if(loginPwd == \"\") {\r\n");
      out.write("\t    \talert(\"암호를 입력하세요!!\");\r\n");
      out.write("\t    \t$(\"input#loginPwd\").val(\"\");\r\n");
      out.write("\t    \t$(\"input#loginPwd\").focus();\r\n");
      out.write("\t    \treturn;  // goLogin() 함수 종료 \r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t    \r\n");
      out.write("\t/*\r\n");
      out.write("\t\t>> 로컬 스토리지(localStorage)와 세션 스토리지(sessionStorage) << \r\n");
      out.write("\t\t      로컬 스토리지와 세션 스토리지는 HTML5에서 추가된 저장소이다.\r\n");
      out.write("\t\t      간단한 키와 값을 저장할 수 있다. 키-밸류 스토리지의 형태이다.\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    ※ 로컬 스토리지와 세션 스토리지의 차이점은 데이터의 영구성이다. \r\n");
      out.write("\t\t       로컬 스토리지의 데이터는 사용자가 지우지 않는 이상 계속 브라우저에 남아 있게 된다. \r\n");
      out.write("\t\t       만료 기간을 설정할 수 없다.\r\n");
      out.write("\t\t       하지만 세션 스토리지의 데이터는 윈도우나 브라우저 탭을 닫을 경우 자동적으로 제거된다.\r\n");
      out.write("\t\t       지속적으로 필요한 데이터(자동 로그인 등)는 로컬 스토리지에 저장하고, \r\n");
      out.write("\t\t       잠깐 동안 필요한 정보(일회성 로그인 정보라든가)는 세션 스토리지에 저장하도록 한다. \r\n");
      out.write("\t\t       그러나 비밀번호같은 중요한 정보는 절대로 저장하면 안된다.\r\n");
      out.write("\t\t       왜냐하면  클라이언트 컴퓨터 브라우저에 저장하는 것이기 때문에 타인에 의해 도용당할 수 있기 때문이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t       로컬 스토리지랑 세션 스토리지가 나오기 이전에도 브라우저에 저장소 역할을 하는 게 있었다.\r\n");
      out.write("\t\t       바로 쿠키인데 쿠키는 만료 기한이 있는 키-값 저장소이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t       쿠키는 4kb 용량 제한이 있고, 매번 서버 요청마다 서버로 쿠키가 같이 전송된다.\r\n");
      out.write("\t\t       만약 4kb 용량 제한을 거의 다 채운 쿠키가 있다면, 요청을 할 때마다 기본 4kb의 데이터를 사용한다. \r\n");
      out.write("\t\t    4kb 중에는 서버에 필요하지 않은 데이터들도 있을 수 있다. \r\n");
      out.write("\t\t       그러므로 데이터 낭비가 발생할 수 있게 된다. \r\n");
      out.write("\t\t       바로 그런 데이터들을 이제 로컬 스토리지와 세션 스토리지에 저장할 수 있다. \r\n");
      out.write("\t\t       이 두 저장소의 데이터는 서버로 자동 전송되지 않는다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t   >> 로컬 스토리지(localStorage) <<\r\n");
      out.write("\t\t      로컬 스토리지는 window.localStorage에 위치한다. \r\n");
      out.write("\t\t      키 밸류 저장소이기 때문에 키와 밸류를 순서대로 저장하면 된다. \r\n");
      out.write("\t\t      값으로는 문자열, boolean, 숫자, null, undefined 등을 저장할 수 있지만, \r\n");
      out.write("\t\t      모두 문자열로 변환된다. 키도 문자열로 변환된다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.setItem('name', '이순신');\r\n");
      out.write("\t\t      localStorage.setItem('birth', 1994);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.getItem('name');        // 이순신\r\n");
      out.write("\t\t      localStorage.getItem('birth');         // 1994 (문자열)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.removeItem('birth');   // birth 삭제\r\n");
      out.write("\t\t      localStorage.getItem('birth');         // null (삭제됨)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.clear();                    // 전체 삭제\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.setItem(키, 값)으로 로컬스토리지에 저장함.\r\n");
      out.write("\t\t      localStorage.getItem(키)로 조회함. \r\n");
      out.write("\t\t      localStorage.removeItem(키)하면 해당 키가 지워지고, \r\n");
      out.write("\t\t      localStorage.clear()하면 스토리지 전체가 비워진다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.setItem('object', { userid : 'leess', name : '이순신' });\r\n");
      out.write("\t\t      localStorage.getItem('object');   // [object Object]\r\n");
      out.write("\t\t            객체는 제대로 저장되지 않고 toString 메소드가 호출된 형태로 저장된다. \r\n");
      out.write("\t\t      [object 생성자]형으로 저장되는 것이다. \r\n");
      out.write("\t\t            객체를 저장하려면 두 가지 방법이 있다. \r\n");
      out.write("\t\t            그냥 키-값 형식으로 풀어서 여러 개를 저장할 수도 있다. \r\n");
      out.write("\t\t            한 번에 한 객체를 통째로 저장하려면 JSON.stringify를 해야된다. \r\n");
      out.write("\t\t            객체 형식 그대로 문자열로 변환하는 것이다. 받을 때는 JSON.parse하면 된다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t      localStorage.setItem('object', JSON.stringify({ userid : 'leess', name : '이순신' }));\r\n");
      out.write("\t\t      JSON.parse(localStorage.getItem('object')); // { userid : 'leess', name : '이순신' }\r\n");
      out.write("\t\t     \r\n");
      out.write("\t\t            이와같이 데이터를 지우기 전까지는 계속 저장되어 있기 때문에 \r\n");
      out.write("\t\t            사용자의 설정(보안에 민감하지 않은)이나 데이터들을 넣어두면 된다.  \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t   >> 세션 스토리지(sessionStorage) <<\r\n");
      out.write("\t\t            세션 스토리지는 window.sessionStorage에 위치한다. \r\n");
      out.write("\t\t      clear, getItem, setItem, removeItem, key 등 \r\n");
      out.write("\t\t            모든 메소드가 로컬 스토리지(localStorage)와 같다. \r\n");
      out.write("\t\t            단지 로컬스토리지와는 다르게 데이터가 영구적으로 보관되지는 않을 뿐이다. \r\n");
      out.write("\t\t            \r\n");
      out.write("\t\t   >> 로컬 스토리지(localStorage)와 세션 스토리지(sessionStorage) 에 저장된 데이터를 보는 방법 << \r\n");
      out.write("\t\t            크롬인 경우 F12(개발자도구) Application 탭에 가면 Storage - LocalStorage 와 SessionStorage 가 보여진다.\r\n");
      out.write("\t\t            거기에 들어가서 보면 Key 와 Value 값이 보여진다.\r\n");
      out.write("\t*/\t\t\r\n");
      out.write("\t    \r\n");
      out.write("\t\tif( $(\"input:checkbox[id=saveid]\").prop(\"checked\") ) {\r\n");
      out.write("\t\t\t// alert(\"아이디저장 체크를 하셨네요\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlocalStorage.setItem('saveid', $(\"input#loginUserid\").val());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\t// alert(\"아이디저장 체크를 안 하셨네요\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlocalStorage.removeItem('saveid');\r\n");
      out.write("\t\t}   \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t    \r\n");
      out.write("\t    var frm = document.loginFrm;\r\n");
      out.write("\t    frm.action = \"");
      out.print( request.getContextPath());
      out.write("/login/login.up\";\r\n");
      out.write("\t    frm.method = \"post\";\r\n");
      out.write("\t    frm.submit();\r\n");
      out.write("\t\r\n");
      out.write("\t}// end of function goLogin()-----------------------------------------\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction goLogOut() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 로그아웃을 처리해주는 페이지로 이동\r\n");
      out.write("\t    location.href=\"");
      out.print( request.getContextPath());
      out.write("/login/logout.up\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t}// end of function goLogOut()-----------------------------------------\r\n");
      out.write("\t\r\n");
      out.write("\t// === 코인충전 결제금액 선택하기(실제로 카드 결제) === // \r\n");
      out.write("\tfunction goCoinPurchaseTypeChoice(userid) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 코인구매 금액 선택 팝업창 띄우기\r\n");
      out.write("\t\tvar url = \"");
      out.print( request.getContextPath());
      out.write("/member/coinPurchaseTypeChoice.up?userid=\"+userid;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\twindow.open(url, \"coinPurchaseTypeChoice\",\r\n");
      out.write("\t\t\t\t    \"left=350px, top=100px, width=650px, height=570px\");\r\n");
      out.write("\t}// end of function goCoinPurchaseTypeChoice(userid){}-----------------\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// === 아임포트 결제를 해주는 함수 === //\r\n");
      out.write("\tfunction goCoinPurchaseEnd(userid, coinmoney) {\r\n");
      out.write("\t//  alert(\"확인용 부모창의 함수 호출함. 사용자ID : \"+userid+\" , 결제금액 : \" +coinmoney+\"원\");\r\n");
      out.write("\t\r\n");
      out.write("\t//  아임포트 결제 팝업창 띄우기 \r\n");
      out.write("\t    var url = \"");
      out.print( request.getContextPath());
      out.write("/member/coinPurchaseEnd.up?userid=\"+userid+\"&coinmoney=\"+coinmoney; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\twindow.open(url, \"coinPurchaseEnd\",\r\n");
      out.write("\t\t\t\t    \"left=350px, top=100px, width=820px, height=600px\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// === DB 상의 tbl_member 테이블에 해당 사용자의 코인금액을 증가(update)시켜주는 함수 === //\r\n");
      out.write("\tfunction goCoinUpdate(userid, coinmoney) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar frm = document.coinUpdateFrm;\r\n");
      out.write("\t\tfrm.userid.value = userid;\r\n");
      out.write("\t\tfrm.coinmoney.value = coinmoney;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfrm.action = \"");
      out.print( request.getContextPath());
      out.write("/member/coinUpdateLoginUser.up\";\r\n");
      out.write("\t\tfrm.method = \"POST\";\r\n");
      out.write("\t\tfrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// === 나의정보 수정하기 === //\r\n");
      out.write("\tfunction goEditPersonal(userid) {\r\n");
      out.write("\t\r\n");
      out.write("\t\t//  나의정보 수정하기 팝업창 띄우기 \r\n");
      out.write("\t    var url = \"");
      out.print( request.getContextPath());
      out.write("/member/memberEdit.up?userid=\"+userid; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\twindow.open(url, \"memberEdit\",\r\n");
      out.write("\t\t\t\t    \"left=350px, top=100px, width=800px, height=650px\");\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f1_reused = false;
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /WEB-INF/login/login.jsp(250,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginuser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t<form name=\"loginFrm\">\r\n");
            out.write("    \t<table id=\"loginTbl\">\r\n");
            out.write("\t\t\t<thead>\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<th colspan=\"2\" id=\"th\">LOGIN</th>\r\n");
            out.write("\t\t\t\t</tr>\r\n");
            out.write("\t\t\t</thead>\r\n");
            out.write("\t\t\t\r\n");
            out.write("\t\t\t<tbody>\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<td style=\"width: 30%; border-bottom: hidden; border-right: hidden; padding: 10px;\">ID</td>\r\n");
            out.write("\t\t\t\t\t<td style=\"width: 70%; border-bottom: hidden; border-left: hidden; padding: 10px;\"><input type=\"text\" id=\"loginUserid\" name=\"userid\" size=\"13\" class=\"box\" autocomplete=\"off\" /></td>\r\n");
            out.write("\t\t\t\t</tr>\t\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<td style=\"width: 30%; border-top: hidden; border-bottom: hidden; border-right: hidden; padding: 10px;\">암호</td>\r\n");
            out.write("\t\t\t\t\t<td style=\"width: 70%; border-top: hidden; border-bottom: hidden; border-left: hidden; padding: 10px;\"><input type=\"password\" id=\"loginPwd\" name=\"pwd\" size=\"13\" class=\"box\" /></td>\r\n");
            out.write("\t\t\t\t</tr>\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t");
            out.write("\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
            out.write("\t\t\t\t\t\t<a style=\"cursor: pointer;\" data-toggle=\"modal\" data-target=\"#userIdfind\" data-dismiss=\"modal\">아이디찾기</a> /\r\n");
            out.write("\t\t\t\t\t\t<a style=\"cursor: pointer;\" data-toggle=\"modal\" data-target=\"#passwdFind\" data-dismiss=\"modal\" data-backdrop=\"static\">비밀번호찾기</a>\r\n");
            out.write("\t\t\t\t\t</td>\r\n");
            out.write("\t\t\t\t</tr>\r\n");
            out.write("\t\t\t\t\r\n");
            out.write("\t\t\t\t<tr>\r\n");
            out.write("\t\t\t\t\t<td colspan=\"2\" align=\"center\" style=\"padding: 10px;\">\r\n");
            out.write("\t\t\t\t\t\t<input type=\"checkbox\" id=\"saveid\" name=\"saveid\" style=\"vertical-align: text-top;\" /><label for=\"saveid\" style=\"margin-right: 20px; vertical-align: middle;\">아이디저장</label>\r\n");
            out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnSubmit\" style=\"width: 67px; height: 27px; background-image: url('");
            out.print( request.getContextPath());
            out.write("/images/login.png'); vertical-align: middle; border: none;\"></button>\r\n");
            out.write("\t\t\t\t\t</td>\r\n");
            out.write("\t\t\t\t</tr>\r\n");
            out.write("\t\t\t</tbody>\r\n");
            out.write("    \t</table>\r\n");
            out.write("\t</form>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        _jspx_th_c_005fif_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
      out.write("\r\n");
      out.write("  <div class=\"modal fade\" id=\"userIdfind\" role=\"dialog\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal content-->\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close myclose\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\">아이디 찾기</h4>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\" style=\"height: 300px; width: 100%;\">\r\n");
      out.write("          <div id=\"idFind\">\r\n");
      out.write("          \t<iframe style=\"border: none; width: 100%; height: 280px;\" src=\"");
      out.print( request.getContextPath());
      out.write("/login/idFind.up\">\r\n");
      out.write("          \t</iframe>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default myclose\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("  <div class=\"modal fade\" id=\"passwdFind\" role=\"dialog\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal content-->\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close myclose\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\">비밀번호 찾기</h4>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\">\r\n");
      out.write("          <div id=\"pwFind\">\r\n");
      out.write("          \t<iframe style=\"border: none; width: 100%; height: 350px;\" src=\"");
      out.print( request.getContextPath() );
      out.write("/login/pwdFind.up\">  \r\n");
      out.write("          \t</iframe>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default myclose\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"coinUpdateFrm\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"userid\" />\r\n");
      out.write("\t<input type=\"hidden\" name=\"coinmoney\" />\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<div class=\"row\" style=\"margin-top: 250px;\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\" id=\"sideconent\" style=\"text-align: left; padding: 20px;\">\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f3_reused = false;
      try {
        _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f3.setParent(null);
        // /WEB-INF/myshop/categoryList.jsp(6,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty requestScope.categoryList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
        if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t<div style=\"width: 95%;\r\n");
            out.write("\t            border: solid 1px gray;\r\n");
            out.write("\t            padding-top: 5px;\r\n");
            out.write("\t            padding-bottom: 5px;\r\n");
            out.write("\t            text-align: center;\r\n");
            out.write("\t            color: navy;\r\n");
            out.write("\t            font-size: 14pt;\r\n");
            out.write("\t            font-weight: bold;\">\r\n");
            out.write("\t   CATEGORY LIST\r\n");
            out.write("\t</div>\r\n");
            out.write("\t\r\n");
            out.write("\t<div style=\"width: 95%;\r\n");
            out.write("\t            border: solid 1px gray;\r\n");
            out.write("\t            border-top: hidden;\r\n");
            out.write("\t            padding-top: 5px;\r\n");
            out.write("\t            padding-bottom: 5px;\r\n");
            out.write("\t            text-align: center;\">\r\n");
            out.write("\t      <a href=\"");
            out.print( request.getContextPath());
            out.write("/shop/mallHome1.up\">전체</a>&nbsp;\r\n");
            out.write("\t      ");
            //  c:forEach
            org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
            boolean _jspx_th_c_005fforEach_005f0_reused = false;
            try {
              _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
              // /WEB-INF/myshop/categoryList.jsp(25,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fforEach_005f0.setVar("map");
              // /WEB-INF/myshop/categoryList.jsp(25,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
              _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/myshop/categoryList.jsp(25,7) '${requestScope.categoryList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${requestScope.categoryList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
              int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
              try {
                int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
                if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  do {
                    out.write("\r\n");
                    out.write("\t      \t  <a href=\"");
                    out.print( request.getContextPath());
                    out.write("/shop/mallByCategory.up?cnum=");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map.cnum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("&cname=");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map.cname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write('"');
                    out.write('>');
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map.cname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("</a>&nbsp;\r\n");
                    out.write("\t      ");
                    int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                }
                if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
              } finally {
                _jspx_th_c_005fforEach_005f0.doFinally();
              }
              _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
              _jspx_th_c_005fforEach_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
            }
            out.write("\r\n");
            out.write("\t</div>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
        _jspx_th_c_005fif_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
      }
      out.write("    ");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"content\" align=\"center\">");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/login/login.jsp(294,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.loginuser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t<table style=\"width: 95%; height: 130px;\">\r\n");
          out.write("    \t\t<tr style=\"background-color: pink;\">\r\n");
          out.write("    \t\t\t<td align=\"center\">\r\n");
          out.write("    \t\t\t\t<span style=\"color: blue; font-weight: bold;\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("    \t\t\t\t[<span style=\"color: red; font-weight: bold;\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>]님\r\n");
          out.write("    \t\t\t\t<br/><br/>\r\n");
          out.write("    \t\t\t\t<div align=\"left\" style=\"padding-left: 20px; line-height: 150%;\">\r\n");
          out.write("    \t\t\t\t\t<span style=\"font-weight: bold;\">코인액&nbsp;:</span>&nbsp;&nbsp; ");
          if (_jspx_meth_fmt_005fformatNumber_005f0(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write(" 원\r\n");
          out.write("    \t\t\t\t\t<br/>\r\n");
          out.write("    \t\t\t\t\t<span style=\"font-weight: bold;\">포인트&nbsp;:</span>&nbsp;&nbsp; ");
          if (_jspx_meth_fmt_005fformatNumber_005f1(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write(" POINT\r\n");
          out.write("    \t\t\t\t</div>\r\n");
          out.write("    \t\t\t\t<br/>로그인 중...<br/><br/>\r\n");
          out.write("    \t\t\t\t[<a href=\"javascript:goEditPersonal('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("');\">나의정보</a>]&nbsp;&nbsp;\r\n");
          out.write("\t\t\t\t  \t[<a href=\"javascript:goCoinPurchaseTypeChoice('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("');\">코인충전</a>] \r\n");
          out.write("\t\t\t\t  \t<br/><br/>\r\n");
          out.write("    \t\t\t\t<button type=\"button\" onclick=\"goLogOut();\">로그아웃</button>\r\n");
          out.write("    \t\t\t</td>\r\n");
          out.write("    \t\t</tr>\r\n");
          out.write("    \t</table> \r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/login/login.jsp(302,72) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).coin}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/login/login.jsp(302,72) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setPattern("###,###");
      int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f0);
      _jspx_th_fmt_005fformatNumber_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/login/login.jsp(304,72) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(sessionScope.loginuser).point}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/login/login.jsp(304,72) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f1.setPattern("###,###");
      int _jspx_eval_fmt_005fformatNumber_005f1 = _jspx_th_fmt_005fformatNumber_005f1.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f1);
      _jspx_th_fmt_005fformatNumber_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f1_reused);
    }
    return false;
  }
}

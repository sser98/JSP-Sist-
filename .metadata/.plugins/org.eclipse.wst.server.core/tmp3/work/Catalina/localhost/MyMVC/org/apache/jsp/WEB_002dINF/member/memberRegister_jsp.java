/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-11-19 22:15:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String ctxPath = request.getContextPath();
   //      /MyMVC

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header2.jsp", out, false);
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("   table#tblMemberRegister {\r\n");
      out.write("   \t    width: 93%;\r\n");
      out.write("   \t    \r\n");
      out.write("   \t    /* 선을 숨기는 것 */\r\n");
      out.write("   \t    border: hidden;\r\n");
      out.write("   \t    \r\n");
      out.write("   \t    margin: 10px;\r\n");
      out.write("   }  \r\n");
      out.write("   \r\n");
      out.write("   table#tblMemberRegister #th {\r\n");
      out.write("   \t\theight: 40px;\r\n");
      out.write("   \t\ttext-align: center;\r\n");
      out.write("   \t\tbackground-color: silver;\r\n");
      out.write("   \t\tfont-size: 14pt;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   table#tblMemberRegister td {\r\n");
      out.write("   \t\t/* border: solid 1px gray;  */\r\n");
      out.write("   \t\tline-height: 30px;\r\n");
      out.write("   \t\tpadding-top: 8px;\r\n");
      out.write("   \t\tpadding-bottom: 8px;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .star { color: red;\r\n");
      out.write("           font-weight: bold;\r\n");
      out.write("           font-size: 13pt;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar flagIdDuplicateClick = false;\r\n");
      out.write("\t// 가입하기 버튼을 클릭시 \"아이디중복확인\" 을 클릭했는지 클릭안했는지를 알아보기위한 용도임.\r\n");
      out.write("\t\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"span.error\").hide();\r\n");
      out.write("\t\t$(\"input#name\").focus();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input#name\").blur(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar name = $(this).val().trim();\r\n");
      out.write("\t\t\tif(name == \"\") {\r\n");
      out.write("\t\t\t\t// 입력하지 않거나 공백만 입력했을 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 공백이 아닌 글자를 입력했을 경우 \r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 name 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input#userid\").blur(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar userid = $(this).val().trim();\r\n");
      out.write("\t\t\tif(userid == \"\") {\r\n");
      out.write("\t\t\t\t// 입력하지 않거나 공백만 입력했을 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 공백이 아닌 글자를 입력했을 경우 \r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 userid 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input#pwd\").blur(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pwd = $(this).val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t // var regExp = /^.*(?=^.{8,15}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).*$/g;\r\n");
      out.write("\t\t // 또는\r\n");
      out.write("\t\t\tvar regExp = new RegExp(/^.*(?=^.{8,15}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).*$/g);\r\n");
      out.write("\t\t\t// 숫자/문자/특수문자/ 포함 형태의 8~15자리 이내의 암호 정규표현식 객체 생성\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar bool = regExp.test(pwd);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!bool) {\r\n");
      out.write("\t\t\t\t// 암호가 정규표현식에 위배된 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 암호가 정규표현식에 맞는 경우\r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 pwd 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"input#pwdcheck\").blur(function(){\r\n");
      out.write("\t\t\tvar pwd = $(\"input#pwd\").val();\r\n");
      out.write("\t\t\tvar pwdcheck = $(this).val();\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t\tif(pwd != pwdcheck) {\r\n");
      out.write("\t\t\t\t// 암호와 암호확인값이 틀린 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\t$(\"input#pwd\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(\"input#pwd\").focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 암호와 암호확인값이 같은 경우\r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 pwdcheck 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"input#email\").blur(function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar email = $(this).val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t // var regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("\t\t\t // 또는\r\n");
      out.write("\t\t\t var regExp = new RegExp(/^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i); \r\n");
      out.write("\t\t\t // 이메일 정규표현식 객체 생성\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t var bool = regExp.test(email);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t if(!bool) {\r\n");
      out.write("\t\t\t\t\t// 이메일이 정규표현식에 위배된 경우\r\n");
      out.write("\t\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t\t//  또는\r\n");
      out.write("\t\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t else {\r\n");
      out.write("\t\t\t\t\t// 이메일이 정규표현식에 맞는 경우\r\n");
      out.write("\t\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t\t//  또는\r\n");
      out.write("\t\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 email 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"input#hp2\").blur(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar hp2 = $(this).val();  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t // var regExp = /^[1-9][0-9]{2,3}$/g;\r\n");
      out.write("\t\t // 또는\r\n");
      out.write("\t\t\tvar regExp = new RegExp(/^[1-9][0-9]{2,3}$/g);\r\n");
      out.write("\t\t\t// 숫자 3자리 또는 4자리만 들어오도록 검사해주는 정규표현식 객체 생성\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar bool = regExp.test(hp2);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!bool) {\r\n");
      out.write("\t\t\t\t// 국번이 정규표현식에 위배된 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 국번이 정규표현식에 맞는 경우\r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 hp2 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input#hp3\").blur(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar hp3 = $(this).val();  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t // var regExp = /^\\d{4}$/g;\r\n");
      out.write("\t\t // 또는\r\n");
      out.write("\t\t\tvar regExp = new RegExp(/^\\d{4}$/g);\r\n");
      out.write("\t\t\t// 숫자 4자리만 들어오도록 검사해주는 정규표현식 객체 생성\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar bool = regExp.test(hp3);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!bool) {\r\n");
      out.write("\t\t\t\t// 마지막 전화번호 4자리가 정규표현식에 위배된 경우\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",true);\r\n");
      out.write("\t\t\t\t$(this).prop(\"disabled\",false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//\t$(this).next().show();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t    $(this).parent().find(\".error\").show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    $(this).focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\t// 마지막 전화번호 4자리가 정규표현식에 맞는 경우\r\n");
      out.write("\t\t\t//\t$(this).next().hide();\r\n");
      out.write("\t\t\t//  또는\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".error\").hide();\r\n");
      out.write("\t\t\t\t$(\":input\").prop(\"disabled\",false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}); // 아이디가 hp3 인 것은 포커스를 잃어버렸을 경우(blur) 이벤트를 처리해주는 것이다.\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"img#zipcodeSearch\").click(function(){\r\n");
      out.write("\t\t\tnew daum.Postcode({\r\n");
      out.write("\t            oncomplete: function(data) {\r\n");
      out.write("\t                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("\t                // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("\t                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("\t                var addr = ''; // 주소 변수\r\n");
      out.write("\t                var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("\t                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("\t                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("\t                    addr = data.roadAddress;\r\n");
      out.write("\t                } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("\t                    addr = data.jibunAddress;\r\n");
      out.write("\t                }\r\n");
      out.write("\r\n");
      out.write("\t                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("\t                if(data.userSelectedType === 'R'){\r\n");
      out.write("\t                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("\t                    // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("\t                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("\t                        extraAddr += data.bname;\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("\t                    if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("\t                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("\t                    if(extraAddr !== ''){\r\n");
      out.write("\t                        extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("\t                    document.getElementById(\"extraAddress\").value = extraAddr;\r\n");
      out.write("\t                \r\n");
      out.write("\t                } else {\r\n");
      out.write("\t                    document.getElementById(\"extraAddress\").value = '';\r\n");
      out.write("\t                }\r\n");
      out.write("\r\n");
      out.write("\t                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t                document.getElementById('postcode').value = data.zonecode;\r\n");
      out.write("\t                document.getElementById(\"address\").value = addr;\r\n");
      out.write("\t                // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("\t                document.getElementById(\"detailAddress\").focus();\r\n");
      out.write("\t            }\r\n");
      out.write("\t        }).open();\t\t\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t////////////////////////////////////////////////////////////////\r\n");
      out.write("\t\tvar mmhtml = \"\";\r\n");
      out.write("\t\tfor(var i=1; i<=12; i++) {\r\n");
      out.write("\t\t\tif(i<10) {\r\n");
      out.write("\t\t\t\tmmhtml += \"<option value ='0\"+i+\"'>0\"+i+\"</option>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\tmmhtml += \"<option value ='\"+i+\"'>\"+i+\"</option>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"select#birthmm\").html(mmhtml);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar ddhtml = \"\";\r\n");
      out.write("\t\tfor(var i=1; i<=31; i++) {\r\n");
      out.write("\t\t\tif(i<10) {\r\n");
      out.write("\t\t\t\tddhtml += \"<option value ='0\"+i+\"'>0\"+i+\"</option>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\tddhtml += \"<option value ='\"+i+\"'>\"+i+\"</option>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"select#birthdd\").html(ddhtml);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// === jQuery UI 의 datepicker === //\r\n");
      out.write("\t\t$(\"input#datepicker\").datepicker({\r\n");
      out.write("                 dateFormat: 'yy-mm-dd'  //Input Display Format 변경\r\n");
      out.write("                ,showOtherMonths: true   //빈 공간에 현재월의 앞뒤월의 날짜를 표시\r\n");
      out.write("                ,showMonthAfterYear:true //년도 먼저 나오고, 뒤에 월 표시\r\n");
      out.write("                ,changeYear: true        //콤보박스에서 년 선택 가능\r\n");
      out.write("                ,changeMonth: true       //콤보박스에서 월 선택 가능                \r\n");
      out.write("                ,showOn: \"both\"          //button:버튼을 표시하고,버튼을 눌러야만 달력 표시 ^ both:버튼을 표시하고,버튼을 누르거나 input을 클릭하면 달력 표시  \r\n");
      out.write("                ,buttonImage: \"http://jqueryui.com/resources/demos/datepicker/images/calendar.gif\" //버튼 이미지 경로\r\n");
      out.write("                ,buttonImageOnly: true   //기본 버튼의 회색 부분을 없애고, 이미지만 보이게 함\r\n");
      out.write("                ,buttonText: \"선택\"       //버튼에 마우스 갖다 댔을 때 표시되는 텍스트                \r\n");
      out.write("                ,yearSuffix: \"년\"         //달력의 년도 부분 뒤에 붙는 텍스트\r\n");
      out.write("                ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 텍스트\r\n");
      out.write("                ,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] //달력의 월 부분 Tooltip 텍스트\r\n");
      out.write("                ,dayNamesMin: ['일','월','화','수','목','금','토'] //달력의 요일 부분 텍스트\r\n");
      out.write("                ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'] //달력의 요일 부분 Tooltip 텍스트\r\n");
      out.write("              //,minDate: \"-1M\" //최소 선택일자(-1D:하루전, -1M:한달전, -1Y:일년전)\r\n");
      out.write("              //,maxDate: \"+1M\" //최대 선택일자(+1D:하루후, +1M:한달후, +1Y:일년후)                \r\n");
      out.write("            });                    \r\n");
      out.write("            \r\n");
      out.write("            //초기값을 오늘 날짜로 설정\r\n");
      out.write("            $('#datepicker').datepicker('setDate', 'today'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, -1M:한달후, -1Y:일년후) \r\n");
      out.write("\t\t/////////////////////////////////////////////////////\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    // === 전체 datepicker 옵션 일괄 설정하기 ===  \r\n");
      out.write("\t\t    //     한번의 설정으로 $(\"#fromDate\"), $('#toDate')의 옵션을 모두 설정할 수 있다.\r\n");
      out.write("            $(function() {\r\n");
      out.write("                //모든 datepicker에 대한 공통 옵션 설정\r\n");
      out.write("                $.datepicker.setDefaults({\r\n");
      out.write("                    dateFormat: 'yy-mm-dd' //Input Display Format 변경\r\n");
      out.write("                    ,showOtherMonths: true //빈 공간에 현재월의 앞뒤월의 날짜를 표시\r\n");
      out.write("                    ,showMonthAfterYear:true //년도 먼저 나오고, 뒤에 월 표시\r\n");
      out.write("                    ,changeYear: true //콤보박스에서 년 선택 가능\r\n");
      out.write("                    ,changeMonth: true //콤보박스에서 월 선택 가능                \r\n");
      out.write("                    ,showOn: \"both\" //button:버튼을 표시하고,버튼을 눌러야만 달력 표시 ^ both:버튼을 표시하고,버튼을 누르거나 input을 클릭하면 달력 표시  \r\n");
      out.write("                    ,buttonImage: \"http://jqueryui.com/resources/demos/datepicker/images/calendar.gif\" //버튼 이미지 경로\r\n");
      out.write("                    ,buttonImageOnly: true //기본 버튼의 회색 부분을 없애고, 이미지만 보이게 함\r\n");
      out.write("                    ,buttonText: \"선택\" //버튼에 마우스 갖다 댔을 때 표시되는 텍스트                \r\n");
      out.write("                    ,yearSuffix: \"년\" //달력의 년도 부분 뒤에 붙는 텍스트\r\n");
      out.write("                    ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 텍스트\r\n");
      out.write("                    ,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] //달력의 월 부분 Tooltip 텍스트\r\n");
      out.write("                    ,dayNamesMin: ['일','월','화','수','목','금','토'] //달력의 요일 부분 텍스트\r\n");
      out.write("                    ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'] //달력의 요일 부분 Tooltip 텍스트\r\n");
      out.write("                 // ,minDate: \"-1M\" //최소 선택일자(-1D:하루전, -1M:한달전, -1Y:일년전)\r\n");
      out.write("                 // ,maxDate: \"+1M\" //최대 선택일자(+1D:하루후, -1M:한달후, -1Y:일년후)                    \r\n");
      out.write("                });\r\n");
      out.write("     \r\n");
      out.write("                //input을 datepicker로 선언\r\n");
      out.write("                $(\"#fromDate\").datepicker();                    \r\n");
      out.write("                $(\"#toDate\").datepicker();\r\n");
      out.write("                \r\n");
      out.write("                //From의 초기값을 오늘 날짜로 설정\r\n");
      out.write("                $('#fromDate').datepicker('setDate', 'today'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, +1M:한달후, +1Y:일년후)\r\n");
      out.write("                //To의 초기값을 내일로 설정\r\n");
      out.write("                $('#toDate').datepicker('setDate', '+1D'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, +1M:한달후, +1Y:일년후)\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            ////// == 아이디중복검사하기 ==  //////\r\n");
      out.write("            $(\"img#idcheck\").click(function(){\r\n");
      out.write("            \tflagIdDuplicateClick = true; \r\n");
      out.write("            \t// 가입하기 버튼을 클릭시 \"아이디중복확인\" 을 클릭했는지 클릭안했는지를 알아보기위한 용도임.\r\n");
      out.write("            \t\r\n");
      out.write("            \t// 입력하고자 하는 아이디가 데이터베이스 테이블에 존재하는지 존재하지 않는지 알아와야 한다.\r\n");
      out.write("               /*\r\n");
      out.write("            \tAjax (Asynchronous JavaScript and XML)란?\r\n");
      out.write("\t\t\t    ==> 이름만 보면 알 수 있듯이 '비동기 방식의 자바스크립트와 XML' 로서\r\n");
      out.write("\t\t\t        Asynchronous JavaScript + XML 인 것이다.\r\n");
      out.write("\t\t\t        한마디로 말하면, Ajax 란? Client 와 Server 간에 XML 데이터를 JavaScript 를 사용하여 비동기 통신으로 주고 받는 기술이다.\r\n");
      out.write("\t\t\t        하지만 요즘에는 데이터 전송을 위한 데이터 포맷방법으로 XML 을 사용하기 보다는 JSON 을 더 많이 사용한다.\r\n");
      out.write("\t\t\t        참고로 HTML은 데이터 표현을 위한 포맷방법이다.\r\n");
      out.write("\t\t\t        그리고, 비동기식이란 어떤 하나의 웹페이지에서 여러가지 서로 다른 다양한 일처리가 개별적으로 발생한다는 뜻으로서, \r\n");
      out.write("\t\t\t        어떤 하나의 웹페이지에서 서버와 통신하는 그 일처리가 발생하는 동안 일처리가 마무리 되기전에 또 다른 작업을 할 수 있다는 의미이다.\r\n");
      out.write("            \t*/\r\n");
      out.write("            \r\n");
      out.write("            \t// 첫번째 방법\r\n");
      out.write("            ");
      out.write("  \r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    // 두번째 방법 \r\n");
      out.write("            \t$.ajax({\r\n");
      out.write("            \t\turl:\"");
      out.print( ctxPath);
      out.write("/member/idDuplicateCheck.up\",\r\n");
      out.write("            \t\tdata:{\"userid\":$(\"input#userid\").val()}, // data 는 /MyMVC/member/idDuplicateCheck.up 로 전송해야할 데이터를 말한다. \r\n");
      out.write("            \t\ttype:\"post\",\r\n");
      out.write("            \t//\tdataType:\"json\",   // Javascript Standard Object Notation.  dataType은  /MyMVC/member/idDuplicateCheck.up 로 부터 실행되어진 결과물을 받아오는 데이터타입을 말한다. \r\n");
      out.write("            \t\tsuccess:function(text){ \r\n");
      out.write("            \t\t\t// dataType:\"json\" 을 생략하면 웹페이지에서 보여지는  {\"isExists\":true} 은 JSON(자바스크립트객체)으로 인식하지 않고 단순히 문자열로 인식한다. \r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t\tvar json = JSON.parse(text); \r\n");
      out.write("            \t\t\t// JSON.parse(text); 은 JSON 형식으로 되어진 문자열을 자바스크립트 객체로 변환해주는 것이다.\r\n");
      out.write("        \t\t\t\t// 조심할 것은 text 는 반드시 JSON 형식으로 되어진 문자열이어야 한다.\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t\tif(json.isExists) {\r\n");
      out.write("            \t\t\t\t// 입력한 userid 가 이미 사용중이라면 \r\n");
      out.write("            \t\t\t\t$(\"span#idcheckResult\").html($(\"input#userid\").val()+\" 은 중복된 ID 이므로 사용불가 합니다.\").css(\"color\",\"orange\");\r\n");
      out.write("            \t\t\t\t$(\"input#userid\").val(\"\");\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t\telse {\r\n");
      out.write("            \t\t\t\t// 입력한 userid 가 DB 테이블에 존재하지 않는 경우라면 \r\n");
      out.write("             \t\t\t\t$(\"span#idcheckResult\").html(\"사용가능합니다\").css(\"color\",\"green\");\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t},\r\n");
      out.write("            \t\terror: function(request, status, error){\r\n");
      out.write("    \t\t\t\t\talert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("    \t\t\t\t}\r\n");
      out.write("            \t});\r\n");
      out.write("\r\n");
      out.write("            });\r\n");
      out.write("            \t\t\r\n");
      out.write("\t}); // end of $(document).ready()--------------------------------\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tfunction goRegister() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar radioCheckedLength = $(\"input:radio[name=gender]:checked\").length;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(radioCheckedLength == 0) {\r\n");
      out.write("\t\t\talert(\"성별을 선택하셔야 합니다.\");\r\n");
      out.write("\t\t\treturn;  // 종료 \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar checkboxCheckedLength = $(\"input:checkbox[id=agree]:checked\").length;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(checkboxCheckedLength == 0) {\r\n");
      out.write("\t\t\talert(\"이용약관에 동의하셔야 합니다.\");\r\n");
      out.write("\t\t\treturn;  // 종료 \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\tif(!flagIdDuplicateClick) { // 아이디중복확인을 클릭했는지 클릭안했는지 알아오기 위한 것임.\r\n");
      out.write("\t\t\talert(\"아이디중복확인 클릭하여 ID중복검사를 하세요!!\");\r\n");
      out.write("\t\t\treturn; // 종료 \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t    //// 필수입력사항에 모두 입력이 되었는지 검사한다  ////\r\n");
      out.write("\t\tvar bFlagRequiredInfo = false;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\".requiredInfo\").each(function(){\r\n");
      out.write("\t\t\tvar data = $(this).val();\r\n");
      out.write("\t\t\tif(data == \"\") {\r\n");
      out.write("\t\t\t\tbFlagRequiredInfo = true;\r\n");
      out.write("\t\t\t\talert(\"*표시된 필수입력사항은 모두 입력하셔야 합니다.\");\r\n");
      out.write("\t\t\t\treturn false;  // break 라는 뜻이다.\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!bFlagRequiredInfo) {\r\n");
      out.write("\t\t\tvar frm = document.registerFrm;\r\n");
      out.write("\t\t\tfrm.action = \"memberRegister.up\";\r\n");
      out.write("\t\t\tfrm.method = \"post\";\r\n");
      out.write("\t\t\tfrm.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}// end of function goRegister()---------------------------------\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 이메일 중복여부 검사하기 \r\n");
      out.write("\tfunction isExistEmailCheck() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("    \t\turl:\"");
      out.print( ctxPath);
      out.write("/member/emailDuplicateCheck.up\",\r\n");
      out.write("    \t\tdata:{\"email\":$(\"input#email\").val()}, // data 는 /MyMVC/member/emailDuplicateCheck.up 로 전송해야할 데이터를 말한다. \r\n");
      out.write("    \t\ttype:\"post\",\r\n");
      out.write("    \t\tdataType:\"json\",   // Javascript Standard Object Notation.  dataType은  /MyMVC/member/emailDuplicateCheck.up 로 부터 실행되어진 결과물을 받아오는 데이터타입을 말한다. \r\n");
      out.write("    \t\tsuccess:function(json){\r\n");
      out.write("    \t\t\tif(json.isExists) {\r\n");
      out.write("    \t\t\t\t// 입력한 email 이 이미 사용중이라면 \r\n");
      out.write("    \t\t\t\t$(\"span#emailCheckResult\").html($(\"input#email\").val()+\" 은 중복된 email 이므로 사용불가 합니다.\").css(\"color\",\"red\");\r\n");
      out.write("    \t\t\t\t$(\"input#email\").val(\"\");\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\telse {\r\n");
      out.write("    \t\t\t\t// 입력한 email 이 DB 테이블에 존재하지 않는 경우라면 \r\n");
      out.write("     \t\t\t\t$(\"span#emailCheckResult\").html(\"사용가능합니다\").css(\"color\",\"navy\");\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t},\r\n");
      out.write("    \t\terror: function(request, status, error){\r\n");
      out.write("\t\t\t\talert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("    \t});\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}// end of function isExistEmailCheck()--------------------------\r\n");
      out.write("\t\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row\" id=\"divRegisterFrm\">\r\n");
      out.write("\t<div class=\"col-md-12\" align=\"center\">\r\n");
      out.write("\t<form name=\"registerFrm\">\r\n");
      out.write("\t\r\n");
      out.write("\t<table id=\"tblMemberRegister\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th colspan=\"2\" id=\"th\">::: 회원가입 (<span style=\"font-size: 10pt; font-style: italic;\"><span class=\"star\">*</span>표시는 필수입력사항</span>) :::</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">성명&nbsp;<span class=\"star\">*</span></td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t    <input type=\"text\" name=\"name\" id=\"name\" class=\"requiredInfo\" /> \r\n");
      out.write("\t\t\t\t<span class=\"error\">성명은 필수입력 사항입니다.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">아이디&nbsp;<span class=\"star\">*</span></td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t    <input type=\"text\" name=\"userid\" id=\"userid\" class=\"requiredInfo\" />&nbsp;&nbsp;\r\n");
      out.write("\t\t\t    <!-- 아이디중복체크 -->\r\n");
      out.write("\t\t\t    <img id=\"idcheck\" src=\"../images/b_id_check.gif\" style=\"vertical-align: middle;\" />\r\n");
      out.write("\t\t\t    <span id=\"idcheckResult\"></span>\r\n");
      out.write("\t\t\t    <span class=\"error\">아이디는 필수입력 사항입니다.</span>\r\n");
      out.write("\t\t\t</td> \r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">비밀번호&nbsp;<span class=\"star\">*</span></td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\"><input type=\"password\" name=\"pwd\" id=\"pwd\" class=\"requiredInfo\" />\r\n");
      out.write("\t\t\t\t<span class=\"error\">암호는 영문자,숫자,특수기호가 혼합된 8~15 글자로 입력하세요.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">비밀번호확인&nbsp;<span class=\"star\">*</span></td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\"><input type=\"password\" id=\"pwdcheck\" class=\"requiredInfo\" /> \r\n");
      out.write("\t\t\t\t<span class=\"error\">암호가 일치하지 않습니다.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">이메일&nbsp;<span class=\"star\">*</span></td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\"><input type=\"text\" name=\"email\" id=\"email\" class=\"requiredInfo\" placeholder=\"abc@def.com\" /> \r\n");
      out.write("\t\t\t    <span class=\"error\">이메일 형식에 맞지 않습니다.</span>\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t\t    <span style=\"display: inline-block; width: 80px; height: 30px; border: solid 1px gray; border-radius: 5px; font-size: 8pt; text-align: center; margin-left: 10px; cursor: pointer;\" onclick=\"isExistEmailCheck();\">이메일중복확인</span> \r\n");
      out.write("\t\t\t    <span id=\"emailCheckResult\"></span>\r\n");
      out.write("\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">연락처</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t    <input type=\"text\" id=\"hp1\" name=\"hp1\" size=\"6\" maxlength=\"3\" value=\"010\" readonly />&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t    <input type=\"text\" id=\"hp2\" name=\"hp2\" size=\"6\" maxlength=\"4\" />&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t    <input type=\"text\" id=\"hp3\" name=\"hp3\" size=\"6\" maxlength=\"4\" />\r\n");
      out.write("\t\t\t    <span class=\"error\">휴대폰 형식이 아닙니다.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">우편번호</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t   <input type=\"text\" id=\"postcode\" name=\"postcode\" size=\"6\" maxlength=\"5\" />&nbsp;&nbsp;\r\n");
      out.write("\t\t\t   ");
      out.write("\r\n");
      out.write("\t\t\t   <img id=\"zipcodeSearch\" src=\"../images/b_zipcode.gif\" style=\"vertical-align: middle;\" />\r\n");
      out.write("\t\t\t   <span class=\"error\">우편번호 형식이 아닙니다.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">주소</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t   <input type=\"text\" id=\"address\" name=\"address\" size=\"40\" placeholder=\"주소\" /><br/>\r\n");
      out.write("\t\t\t   <input type=\"text\" id=\"detailAddress\" name=\"detailAddress\" size=\"40\" placeholder=\"상세주소\" />&nbsp;<input type=\"text\" id=\"extraAddress\" name=\"extraAddress\" size=\"40\" placeholder=\"참고항목\" /> \r\n");
      out.write("\t\t\t   <span class=\"error\">주소를 입력하세요</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">성별</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t   <input type=\"radio\" id=\"male\" name=\"gender\" value=\"1\" /><label for=\"male\" style=\"margin-left: 2%;\">남자</label>\r\n");
      out.write("\t\t\t   <input type=\"radio\" id=\"female\" name=\"gender\" value=\"2\" style=\"margin-left: 10%;\" /><label for=\"female\" style=\"margin-left: 2%;\">여자</label>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">생년월일</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t   <input type=\"number\" id=\"birthyyyy\" name=\"birthyyyy\" min=\"1950\" max=\"2050\" step=\"1\" value=\"1995\" style=\"width: 80px;\" required />\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   <select id=\"birthmm\" name=\"birthmm\" style=\"margin-left: 2%; width: 60px; padding: 8px;\">\r\n");
      out.write("\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t</select> \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   <select id=\"birthdd\" name=\"birthdd\" style=\"margin-left: 2%; width: 60px; padding: 8px;\">\r\n");
      out.write("\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t</select> \r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">생년월일</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t   <input type=\"text\" id=\"datepicker\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 20%; font-weight: bold;\">재직기간</td>\r\n");
      out.write("\t\t\t<td style=\"width: 80%; text-align: left;\">\r\n");
      out.write("\t\t\t\tFrom: <input type=\"text\" id=\"fromDate\">&nbsp;&nbsp; \r\n");
      out.write("\t\t\t\tTo: <input type=\"text\" id=\"toDate\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t<label for=\"agree\">이용약관에 동의합니다</label>&nbsp;&nbsp;<input type=\"checkbox\" id=\"agree\" />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" style=\"text-align: center; vertical-align: middle;\">\r\n");
      out.write("\t\t\t\t<iframe src=\"../iframeAgree/agree.html\" width=\"85%\" height=\"150px\" class=\"box\" ></iframe>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" style=\"line-height: 90px;\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" id=\"btnRegister\" style=\"background-image:url('/MyMVC/images/join.png'); border:none; width: 135px; height: 34px; margin-left: 30%;\" onClick=\"goRegister();\"></button> \r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer2.jsp", out, false);
      out.write("     ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
